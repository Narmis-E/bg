html {
  --textsize: 16px;
  --textcolor: #eee;
  --backcolor: #0e0e0f;

  --margin: calc(0.8em + 1vw);
  --thumbsize: 156px; /* size M */
  --slide-transition: auto; /* smooth or auto */
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  scroll-behavior: smooth;
}

body {
  font: var(--textsize) / 1.4 -apple-system, BlinkMacSystemFont, 'Segoe UI', Noto, Roboto, Oxygen-Sans, Cantarell, 'Helvetica Neue', Arial, sans-serif;
  color: var(--textcolor);
  background: var(--backcolor);
  padding: var(--margin) var(--margin) 0;
  overscroll-behavior: contain;
  -webkit-tap-highlight-color: transparent;
}

footer {
  position: sticky;
  top: 100vh;
  padding: calc(var(--margin) * 2.5) 0 var(--margin) 0;
  font-size: 0.85em;
  opacity: 0.4;
}

h1 {
  font-size: 1em;
}

h1 span {
  font-weight: normal;
  display: inline-block;
}

a {
  color: currentColor;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
  user-select: none;
}

/* -- Images grid -- */

.grid {
  clear: both;
  display: grid;
  grid-auto-flow: dense;
  grid-template-columns: repeat(auto-fill, minmax(var(--thumbsize), 1fr));
  grid-gap: calc(var(--margin) * 1.33) var(--margin);
  padding-top: calc(var(--margin) * 2);
}

.grid figure {
  position: relative;
}

.grid a {
  display: block;
  position: relative;
  scroll-margin: 20vh 0;
}

.grid a img {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.grid a::before {
  content: "";
  display: block;
  padding-top: 100%;
}

.grid figcaption {
  font-size: 0.85em;
  margin-top: calc(var(--margin) / 2);
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  opacity: 0.4;
}

.grid figure a:focus {
  outline: 0 none;
  border-radius: 1px;
  box-shadow: 0 0 0 4px;
  background: currentColor;
}

.grid figure a:hover + figcaption,
.grid figure a:focus + figcaption {
  opacity: 1;
}

/* Thumbnails S M L XL */

input {
  appearance: none;
  -webkit-appearance: none;
  width: 0;
  height: 0;
  overflow: hidden;
  direction: rtl;
}

label {
  user-select: none;
  cursor: pointer;
  opacity: 0.5;
  padding: 0.05em 0.45em;
  margin-top: -0.05em;
  float: right;
  display: none;
}

label:hover,
input:focus + label {
  opacity: 1;
}

input:focus + label,
input:checked + label:hover {
  outline: 1px solid;
  border-radius: 1px;
}

input:checked + label {
  opacity: 1;
  font-weight: bold;
}

/* Show only on bigger screens */
@media (min-width: 820px) {
  label {
    display: inline-block;
  }
  h1 {
    display: inline-block;
    float: left;
    width: calc(100% - 20ch);
  }
}

input#small:checked ~ .grid {
  grid-template-columns: repeat(auto-fill, minmax(calc(var(--thumbsize) / 2), 1fr));
  grid-gap: var(--margin);
}

input#large:checked ~ .grid {
  grid-template-columns: repeat(auto-fill, minmax(calc(var(--thumbsize) * 1.5), 1fr));
  grid-gap: calc(var(--margin) * 1.5);
}

input#x-large:checked ~ .grid {
  grid-template-columns: repeat(auto-fill, minmax(calc(var(--thumbsize) * 2), 1fr));
  grid-gap: calc(var(--margin) * 1.5);
}

/* -- Lightbox -- */

.lightbox {
  position: fixed;
  top: 0;
  right: 100vw;
  bottom: 0;
  left: 0;
  display: flex;
  overflow-x: scroll;
  scroll-snap-type: x mandatory;
  overscroll-behavior: contain;
  z-index: 5;
}

.lightbox:focus-within {
  right: 0; /* hello */
}

.lightbox:hover {
  scroll-behavior: var(--slide-transition);
}

.lightbox figure {
  background: var(--backcolor);
  position: relative;
  scroll-snap-align: center;
  flex: none;
  display: flex;
  width: 100vw;
  align-items: center;
  justify-content: center;
}

/* fix for #permalinks to work */
.lightbox:not(:focus-within) figure:target {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1;
}

.lightbox figure:focus {
  outline: none;
}

.lightbox figure a.image {
  display: flex;
  width: 100vw;
  height: 100vh;
  align-items: center;
  justify-content: center;
  cursor: default;
}

.lightbox figure a.image img {
  width: auto;
  height: auto;
  max-width: 100vw;
  max-height: 100vh;
  z-index: 2;
  opacity: 0;
}

.lightbox:focus-within figure a.image img,
.lightbox:not(:focus-within) figure:target a.image img {
  opacity: 1;
  transition: 0.35s opacity ease-out;
}

/* -- Prev / Next -- */

.lightbox figure a.image::before,
.lightbox figure a.image::after {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  width: 33vw;
  z-index: 3;
}

.lightbox figure a.image::before {
  cursor: e-resize;
  left: -33vw;
}

.lightbox figure a.image::after {
  cursor: w-resize;
  right: -33vw;
}

.lightbox figure:first-of-type a.image::before,
.lightbox figure:last-of-type a.image::after {
  display: none;
}

/* -- Counter -- */

.lightbox {
  counter-reset: currentStep 0 remainder 0 totalStep 0;
}

.lightbox figure {
  counter-increment: totalStep;
}

.lightbox figure::before {
  content: "";
  counter-increment: currentStep;
}

.lightbox figure:target ~ figure::before {
  counter-increment: remainder;
}

.counter {
  font-variant-numeric: tabular-nums;
  opacity: 0.3;
  text-shadow: 1px 1px 2px var(--backcolor);
  z-index: 3;
  position: fixed;
  bottom: 1em;
  right: 1.25em;
}

.lightbox:focus-within .counter::before {
  content: counter(currentStep) " / " counter(totalStep);
}

/* -- Close button -- */

a.close {
  position: absolute;
  display: block;
  top: 0;
  right: 0;
  z-index: 20;
  opacity: 0.3;
  width: 10vmax;
  height: 10vmax;
}

a.close:focus-visible {
  outline: 0;
}

a.close::before,
a.close::after {
  pointer-events: none;
  position: absolute;
  top: 1.75em;
  right: 1.25em;
  content: "";
  width: 1.3em;
  border: 1px solid;
  display: block;
}

a.close::before {
  transform: rotate(45deg);
}

a.close::after {
  transform: rotate(-45deg);
}

a.close:hover {
  opacity: 1;
}

/* -- Loading spinner -- */

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.lightbox figure::before {
  content: "";
  height: 1.5em;
  width: 1.5em;
  animation: spin 0.8s infinite linear;
  border: 1px solid;
  border-right-color: transparent;
  border-radius: 50%;
  display: block;
  position: absolute;
  transform: translateX(-50%);
  opacity: 0.25;
}
